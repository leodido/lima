name: test

on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:

jobs:
  golangci-lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.35
          args: --verbose

  shellcheck:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
      - name: Run shellcheck
        run: find . -name '*.sh' | xargs shellcheck

  shfmt:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install shfmt
        run: GO111MODULE=on go get mvdan.cc/sh/v3/cmd/shfmt
      - name: Run shfmt
        run: find . -name '*.sh' | xargs shfmt -s -d

  basic:
    name: Basic tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-20.04]
    timeout-minutes: 20
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Unit tests
        run: go test -v ./...
      - name: Make
        run: make
      - name: Install
        run: sudo make install
      - name: Validate examples
        run: limactl validate ./examples/*.yaml
      - name: Uninstall
        run: sudo make uninstall

  integration:
    name: Integration tests
    runs-on: macos-10.15
    timeout-minutes: 40
    strategy:
      matrix:
        # GHA macOS is slow and flaky, so we only test "default.yaml" here.
        # Other yamls are tested on Linux instances of Cirrus.
        example: [default.yaml]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Make
        run: make
      - name: Install
        run: make install
      - name: Install test dependencies
        # QEMU:      required by Lima itself
        # samba:     required by Lima itself
        # bash:      required by test-example.sh (OS version of bash is too old)
        # coreutils: required by test-example.sh for the "timeout" command
        run: brew install qemu samba bash coreutils
      - name: Prepare ssh
        run: |
          if [ -e ~/.ssh/id_rsa ]; then
            echo "~/.ssh/id_rsa already exists"
          else
            echo "Generating ~/.ssh/id_rsa"
            ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N ""
          fi
      - name: Cache ~/Library/Caches/lima/download
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/lima/download
          key: ${{ runner.os }}-examples/${{ matrix.example }}
      - name: Test
        env:
          EXAMPLE: ${{ matrix.example }}
        run: ./hack/test-example.sh examples/$EXAMPLE

  artifacts:
    name: Artifacts
    # the release pipeline uses Linux, so we Linux here as well
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Make artifacts
        run: make artifacts
